<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Font Awesome icons (free version)-->
        <script src="https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>
        <!-- Google fonts-->
        <link href="https://fonts.googleapis.com/css?family=Varela+Round" rel="stylesheet" />
        <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="/css/styles.css" rel="stylesheet" />
        <title>Lee Portfolio - Chatbox</title>
        <style>
            body {
                display: grid;
                grid-template-columns: 100vw;
                grid-template-rows: 10vh minmax(58vh, 70vh) 20vh;
                grid-row-gap : 0.5vh;
                height: 100%;
                overflow: hidden;
                background-color: #f8f8f8;
            }
            @media (max-width: 500px) {
                body {
                    grid-template-rows: 10vh 65vh 20vh;
                }
            }

            .middleWindow {
                display: grid;
                grid-template-columns: 15vw 85vw;
                background-color: grey;
                min-height: 58vh;
                width: 100%;
            }
            @media (max-width: 700px) {
                .middleWindow {
                    grid-template-columns: 25vw 75vw;
                }
            }

            .chatMembers {
                grid-column: 1 / 2;
                overflow-y: scroll;
                overflow-x: auto;
                width: 100%;
            }

            .contents {
                overflow-y: scroll;
                overflow-x: hidden;
                padding: 2rem;
                grid-column: 2 / 3;
                width: 100%;
                background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.7) 75%, #000 100%), url("../assets/img/bg-masthead.jpg");
            }
            
            .messages {
                width: 100%;
                background-color: #9fa3ab;
                margin-bottom; 0.5rem;
            }
            
            .messages .myMessage {
                background-color: #699df0;
                color: #ffffff;
                float: right;
                max-width: 75%;
                margin-left: 100%;
                margin-bottom: 0.5rem;
                overflow-wrap: break-word; 
                text-align: left;
                width: max-content;
                white-space: normal;
                padding: 1rem;
                padding-bottom: 2rem;
                border-radius: 20px;
                box-shadow: rgba(0, 0, 0, 0.09) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.09) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;
            }

            .messages .incomingMessage {
                background-color: #ebeef2;
                color: black;
                float: left;
                max-width: 75%;
                margin-right: 100%;
                margin-bottom: 1rem;
                overflow-wrap: break-word; 
                text-align: left;
                width: max-content;
                white-space: normal;
                padding: 0.5rem;
                border-radius: 20px;
                box-shadow: rgba(0, 0, 0, 0.09) 0px -23px 25px 0px inset, rgba(0, 0, 0, 0.09) 0px -36px 30px 0px inset, rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px, rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px, rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;
            }

            .inputArea {
                max-height: 20vh;
                grid-column: 1 / 3;
                grid-row: 3 / 4;
            }

            #typingIndicator {
                width: 100%;
            }
            @media (max-width: 500px) {
                .inputArea {
                    height: 20vh;
                }
                #typingIndicator {
                    display: block;
                }
            }

            #inputForm {
                background-color: #9fa3ab;
                display: grid;
                grid-template-columns: 60% 25% 15%;
                grid-template-rows: 50% 50%;
                position: fixed;
                bottom: 0;
                width: 100%;
                min-height: 10vh;
                max-height: 20vh;
                height: 15vh;
                padding: 1rem;
            }
            @media (max-width: 500px) {
                #inputForm {
                    grid-template-columns: 75% 25%;
                    grid-template-rows: 33% 33% 33%;
                    height: 20vh;
                }
            }

            #inputMessage {
                grid-column: 1 / 2;
                grid-row: 1 / 3;
                width: 100%;
                height: 100%;
                box-sizing: border-box;
                border: 2px solid #ccc;
                border-radius: 2px;
                background-color: #f8f8f8;
                font-size: 16px;
                resize: none;
            }
            @media (max-width: 500px) {
                #inputMessage{
                    grid-column: 1 / 2;
                    grid-row: 2 / 4;    
                }
            }

            #placeholder {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 1;
                grid-row-end: 2;
                height: 100%;
                width: 100%;
                padding-left: 0.5rem;
                text-align: center;
            }
            @media (max-width: 500px) {
                #placeholder{
                    display: none; 
                }
            }

            #username {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 2;
                grid-row-end: 3;
            }
            @media (max-width: 500px) {
                #username{
                    grid-column-start: 1;
                    grid-column-end: 2;
                    grid-row-start: 1;
                    grid-row-end: 2;   
                }
            }

            #sendMessage {
                grid-column: 3 / 4;
                grid-row: 1 / 3;
            }
            @media (max-width: 500px) {
                #sendMessage{
                    grid-column: 2 / 3;
                    grid-row: 2 / 4;    
                }
            }
            
            .nav, #navbar{
                grid-column: 1 / 3;
                grid-row: 1 / 2;
            }
            
            #navbar {
                background-color: #9fa3ab;"
            }

            
        </style>
    </head>
  
    <body id="page-top">
        <!-- Navigation-->
        <div id="navbar">
            <nav class="navbar navbar-expand-lg navbar-light fixed-top" id="mainNav">
                <div class="container px-4 px-lg-5">
                    <a class="navbar-brand" href="/">Christopher Lee</a>
                    <button class="navbar-toggler navbar-toggler-right" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                        Menu
                        <i class="fas fa-bars"></i>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarResponsive">
                        <ul class="navbar-nav ms-auto">
                            <li class="nav-item"><a class="nav-link" href="/chat">Chatbox</a></li>
                            <li class="nav-item"><a class="nav-link" href="#projects">Projects</a></li>
                            <li class="nav-item"><a class="nav-link" href="#signup">Contact</a></li>
                        </ul>
                    </div>
                </div>
            </nav>
        </div>
        <div class="middleWindow">
            <div class="chatMembers">Members</div>
            <div class="contents" id="contents">
                <div id="chatMessages" class="messages"></div>
            </div>
        </div>
        <div class="inputArea">
            <span id="typingIndicator"></span>            
            <form id="inputForm" action="">
                <textarea id="inputMessage" autocomplete="off" placeholder="Enter your message here... and remember to be nice!"></textarea>
                <span id="placeholder">Username:</span>
                <% if (user) { %>
                    <input id="username" disabled value="<%= user.nickname %>">
                <% } else { %>
                    <input id="username" autocomplete="off" placeholder="Username?" >
                <% } %>
                <button id="sendMessage" type="submit">Send</button>
            </form>
        </div>
        <div id="demo-modal" class="modal" role="dialog" tabindex="-1">
  <div class="model-inner">
    <div class="modal-header">
      <h3>Hello World</h3>
      <button class="modal-close" data-id="demo-modal" id="closeModal" aria-label="Close">
        &times;
      </button>
    </div>
    <p>
      Natus earum velit ab nobis eos. Sed et exercitationem voluptatum omnis
      dolor voluptates. Velit ut ipsam sunt ipsam nostrum. Maiores officia
      accusamus qui sapiente. Dolor qui vel placeat dolor nesciunt quo dolor
      dolores. Quo accusamus hic atque nisi minima.
    </p>
  </div>
</div>

        <script src="/socket.io/socket.io.js"></script>
        <script>
            var socket = io();
            
            var form = document.getElementById("inputForm");
            var chatField = document.getElementById("inputMessage");
            var username = document.getElementById("username");
            
            var typing = false,
                timeout = undefined;
            
            function timeoutFunction(){
                typing = false;
                socket.emit("typing indicator", username.value, false);
            };
            
            function typingNow(){
                if (typing == false){
                    typing = true;
                    socket.emit("typing indicator", username.value, true);
                    timeout = setTimeout(timeoutFunction, 5000);
                } else {
                    clearTimeout(timeout);
                    timeout = setTimeout(timeoutFunction, 5000);
                }
            };
            
            chatField.addEventListener("keydown", function(e){
                if (username.value){
                    typingNow();
                }
            });
            
            chatField.addEventListener("keyup", function(e){
                if (username.value){
                    typing = true;
                    socket.emit("typing indicator", username.value, true);
                    clearTimeout(timeout);
                    timeout = setTimeout(timeoutFunction, 2000);
                }
            });

            function sendText(){
                var timeNow = new Date();
                if (chatField.value && username.value) {
                    socket.emit("chat message", chatField.value, username.value, timeNow);
                    
                    var messageLine = document.createElement("div");
                    messageLine.className = "myMessage";
                    messageLine.textContent = username.value + ": " + chatField.value;
                    chatMessages.appendChild(messageLine);

                    var timeIndicator = document.createElement("div");
                    timeIndicator.className = "timestamp";
                    timeIndicator.textContent = timeNow.getHours() + ':' + timeNow.getMinutes();
                    messageLine.appendChild(timeIndicator);
                    
                    //const chatContent = document.getElementById("contents");
                    contents.scrollTo(0, contents.scrollHeight);
                    chatField.value = "";
                } else if (chatField.value && username.value == "") {
                    username.style.backgroundColor = "red";
                    username.setAttribute("placeholder","Username is required!");
                }
            }
            
            form.addEventListener("submit", function(e){
                e.preventDefault();
                sendText();
            });
            
            username.addEventListener("input", function(){
                username.style.backgroundColor = "#ffffff";
            });
            
            document.getElementById("inputMessage").addEventListener("keypress", function(e){
                if (e.keyCode === 13) {
                    e.preventDefault();
                    sendText();
                }
            });
            
            socket.on("chat message", function(msg, username, timestamp){
                var messageLine = document.createElement("div");
                messageLine.className = "incomingMessage";
                messageLine.textContent = username + ": " + msg;
                chatMessages.appendChild(messageLine);

                var timeIndicator = document.createElement("div");
                timeIndicator.className = "timestamp";
                timeIndicator.textContent = timestamp;
                messageLine.appendChild(timeIndicator);
                contents.scrollTo(0, contents.scrollHeight);
            });
            
            socket.on("output history", function(msg, username, timestamp){
                var messageLine = document.createElement("div");
                messageLine.className = "incomingMessage";
                messageLine.textContent = username + ": " + msg;
                chatMessages.appendChild(messageLine);

                var timeIndicator = document.createElement("div");
                timeIndicator.className = "timestamp";
                timeIndicator.textContent = timestamp;
                messageLine.appendChild(timeIndicator);
                contents.scrollTo(0, contents.scrollHeight);
            })
            
            socket.on("typing indicator", function(username, isTyping){
                var typing = document.getElementById("typingIndicator");
                if (isTyping) {
                    document.getElementById("typingIndicator").style.display = "block";
                    typing.innerHTML = username + " is typing...";
                } else {
                    typing.innerHTML = "";
                    document.getElementById("typingIndicator").style.display = "none";
                }
            });
        </script>
        <!-- Bootstrap core JS-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Core theme JS-->
        <script src="js/scripts.js"></script>
    </body>
</html>